# Loads all the types of references in the database

CALL apoc.load.xml("file:///test.xml")
YIELD value

UNWIND [item in value._children] as entry

WITH entry,
	entry.key as key,
	entry.mdate as mdate,
	entry.publtype as publtype,
	entry.reviewid as reviewid,
	entry.rating as rating,
	entry.cdate as cdate,
	[item in entry._children WHERE item._type = "title"][0] AS title,
	[item in entry._children WHERE item._type = "author"] AS authors,
	[item in entry._children WHERE item._type = "editor"] AS editors,
	[item in entry._children WHERE item._type = "journal"] AS journals

CALL apoc.do.case([
	entry._type = "article","MERGE (a:Article {key: key}) RETURN a",
	entry._type = "inproceedings","MERGE (a:Inproceedings {key: key}) RETURN a",
	entry._type = "proceedings","MERGE (a:Proceedings {key: key}) RETURN a",
	entry._type = "book","MERGE (a:Book {key: key}) RETURN a",
	entry._type = "incollection","MERGE (a:Incollection {key: key}) RETURN a",
	entry._type = "phdthesis","MERGE (a:Phdthesis {key: key}) RETURN a",
	entry._type = "mastersthesis","MERGE (a:Mastersthesis {key: key}) RETURN a",
	entry._type = "www","MERGE (a:WWW {key: key}) RETURN a",
	entry._type = "person","MERGE (a:Person {key: key}) RETURN a",
	entry._type = "data","MERGE (a:Data {key: key}) RETURN a"],
	"MERGE(a:LOL {aha: 'ha'}) RETURN a",
	{entry:entry, key:key, title:title}
)

YIELD value as a
WITH title, authors, editors, journals, a.a AS a

FOREACH(journal in journals |
	MERGE (j:Journal {name: journal._text})
	MERGE (j)-[:publish]->(a)
)

FOREACH(author in authors |
	MERGE (p:Person {name: author._text})
	MERGE (p)-[:author]->(a)
)


FOREACH (editor in editors |
	MERGE (p:Person {name: editor._text})
	MERGE (p)-[:editor]->(a)
)
